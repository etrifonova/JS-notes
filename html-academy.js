/* for loop / цикл for

1) Первая часть — подготовительная. Команды отсюда запускаются один раз перед началом работы цикла. Обычно здесь задаётся исходное значение для переменной-счётчика. Можно сказать, что первая часть — стартовая настройка для цикла.

В примере ниже мы создали переменную-счётчик i и задали ей начальное значение 0. Именно этому значению будет равна переменная, когда цикл начнёт свою работу.

Обратите внимание, что в цикле мы создаём переменную-счётчик с помощью let, как в случае с любой другой переменной. Традиционно такая переменная называется i (от слова index), но у неё может быть любое другое название. Например, если цикл считает дни, переменная-счётчик может называться day, а если страницы документа, то page.

for (let i = 0; i < 5; i = i + 1) { }

2) Вторая часть — проверочная. Она содержит условие и запускается перед каждым новым витком цикла. Условие здесь работает по знакомому вам алгоритму. Если условие возвращает true, цикл делает ещё один виток, иначе цикл завершает свою работу.

В примере мы указали, что цикл должен работать пока переменная i будет меньше 5.

for (let i = 0; i < 5; i = i + 1) { }

3) Третья часть — дополняющая, хотя по-научному она называется «законом изменения». Код третьей части запускается после каждого витка цикла. То есть после того, как выполнится код из тела цикла. Обычно там изменяется переменная-счётчик.

В нашем случае мы указали, что после каждого витка цикла, переменная i должна увеличиваться на единицу.

for (let i = 0; i < 5; i = i + 1) { }

Комбинировать можно не только сложение, но и остальные математические операции: вычитание -=, умножение *=, деление /= и нахождение остатка %=. Например, i *= 10 будет аналогично i = i * 10.
*/